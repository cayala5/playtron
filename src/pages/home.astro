---
import { Debug } from "astro:components";
import { Image } from "astro:assets";
import wordmark from "../images/wordmark.png";
import defaultAvatar from "../images/avatar_example.png";
import PlaylistArea from "../components/playlist-area.astro";
import { SpotifyAPIHelper } from "../script/spotify_api";

const token = Astro.cookies.get("session")?.value;
if (token === undefined) {
    return Astro.redirect("/auth");
}

const spotify = new SpotifyAPIHelper(token);

let resps;
try {
    resps = await Promise.all([
        spotify.makeCurrentUserPlaylistRequest(),
        spotify.makeCurrentUserRequest(),
    ]);
} catch (error) {
    console.log(error);
    return;
}
if (!resps) {
    return Astro.redirect("/error");
}

const [plData, uData] = resps;
if (!spotify.validateMePlaylistsResponse(plData)) {
    console.log("Request to /me/playlists failed to return the right data");
    return Astro.redirect("/error");
}

const displayName = uData.display_name;
const avatarSrc = uData.images[0]?.url || defaultAvatar;
const numPlaylists = plData.total;
---

<style is:global>
    :root {
        --primary: 142 71% 45%;
        --background: 20 14% 4%;
        --foreground: 0 0% 95%;
        --card: 24 9% 10%;
        font-family: sans-serif;
    }
    .card {
        background-color: hsl(var(--card));
        border-radius: 1rem;
        overflow: hidden;
        padding: 1rem;
    }

    .bg-card {
        background-color: hsl(var(--card));
    }

    .rd-corner {
        border-radius: 1rem;
        overflow: hidden;
    }

    .h-flex {
        display: flex;
        justify-content: space-evenly;
        align-items: center;
    }

    .ft-big {
        font-size: 2rem;
    }

    .pad {
        padding: 1rem;
    }

    .circle {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        overflow: hidden;
    }

    .dim-card {
        min-width: 300px;
        max-width: 400px;
    }
</style>

<style>
    body {
        margin: 0;
        color: hsl(var(--foreground));
        background-color: hsl(var(--background));
    }
    .wordmark {
        display: block;
        padding: 1rem;
        margin: 0 auto;
    }
</style>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Astro</title>
    </head>
    <body>
        <!--Header -->
        <div class="bg-card">
            <a href="/">
                <Image class="wordmark" src={wordmark} alt="Playtron" />
            </a>
        </div>
        <!-- App area -->
        <div class="pad h-flex">
            <div class="bg-card dim-card rd-corner h-flex pad">
                <div class="circle">
                    <Image
                        src={avatarSrc}
                        alt="User avatar"
                        height={64}
                        width={64}
                    />
                </div>
                <div>
                    <div class="ft-big">{displayName}</div>
                    <div>{numPlaylists} playlists</div>
                </div>
            </div>
        </div>
        <PlaylistArea data={plData} />
    </body>
</html>
